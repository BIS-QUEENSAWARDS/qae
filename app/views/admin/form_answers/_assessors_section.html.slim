/ TODO Assessors
/ probably can be handled by AJAX to keep the data consistent
/ and for example remove the assigned assessors from the selects
.well.section-applicant-users
  h2
    ' Assessors
  ul.list-unstyled.list-actions
    li.form-group
      label
        span.icon-role L
        span.assessor-label Lead:
      .form-value
        ' Not implemented
      .clear

    li.form-group
      label
        span.icon-role 1
        ' Primary:
      - if policy(resource).assign_assessor?
        = form_for([namespace_name, (resource.assessor_assignments.primary || AssessorAssignment.new(position: "primary"))]) do |form|
          .form-fields
            = form.select :assessor_id, Assessor.available_for(resource.award_type_slug).map{|a| [a.email, a.id]}, { include_blank: true }
          = link_to "#", class: "form-edit-link"
            span.glyphicon.glyphicon-pencil
            ' Edit
          = form.submit :add, class: "btn btn-primary form-save-button"

      .form-value class=("ellipsis edit-value" if policy(resource).assign_assessor?)
        - if resource.assessors.primary.present?
          = link_to "#", class: "ellipsis"
            = resource.assessors.primary.try(:full_name)
        - else
          span.p-empty Not assigned
      .clear

    li.form-group
      label
        span.icon-role 2
        span.assessor-label Secondary:
      - if policy(resource).assign_assessor?
        = form_for([namespace_name, (resource.assessor_assignments.secondary || AssessorAssignment.new(position: "secondary"))]) do |form|
          .form-fields
            = form.select :assessor_id, Assessor.available_for(resource.award_type_slug).map{|a| [a.email, a.id]}, { include_blank: true }
          = link_to "#", class: "form-edit-link"
            span.glyphicon.glyphicon-pencil
            ' Edit
          = form.submit :add, class: "btn btn-primary form-save-button"

      .form-value class=("ellipsis edit-value" if policy(resource).assign_assessor?)
        - if resource.assessors.secondary.present?
          = link_to "#", class: "ellipsis"
            = resource.assessors.secondary.try(:full_name)
        - else
          span.p-empty Not assigned
      .clear

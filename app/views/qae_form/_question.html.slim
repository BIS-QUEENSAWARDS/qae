- if question.header
  h2
    = question.header
  - if question.header_context
    == question.header_context

fieldset class=question.fieldset_classes data=question.fieldset_data_hash class=("question-has-errors" if @form_answer.validator_errors && @form_answer.validator_errors[question.hash_key])
  = condition_divs question do
    - ref = question.ref ? question.ref : question.sub_ref
    - if question.title != "" || question.show_ref_always.present?
      - if question.label_as_legend?
        legend aria-label="#{ref.to_s.gsub(' ', '-')} #{question.title.blank? ? '' : ':' + question.title}"
          - if question.ref || question.sub_ref
            span class="steps step-#{ref.to_s.parameterize} #{'if-js-hide' if question.sub_ref && !question.display_sub_ref_on_js_form}"
              span.todo
                = ref.to_s
          - unless question.title.blank?
            h2
              == question.title

          = render "qae_form/question_sub_title", question: question

      - else
        label for="q_#{question.key}" id="q_#{question.key}_label" aria-label="#{ref.to_s.gsub(' ', '-')}: #{question.title}"
          - if question.ref || question.sub_ref
            span class="steps step-#{ref.to_s.parameterize} #{'if-js-hide' if question.sub_ref && !question.display_sub_ref_on_js_form}"
              span.todo
                = ref.to_s
          - unless question.title.blank?
            h2
              == question.title

          = render "qae_form/question_sub_title", question: question

    - else
      - if question.ref || question.sub_ref
        .if-js-hide
          label for="q_#{question.key}" aria-label="#{ref.to_s.gsub(' ', '-')}: #{question.title}"
            h2
              span class="steps step-#{ref.to_s.parameterize} #{'if-js-hide' if question.sub_ref && !question.display_sub_ref_on_js_form}"
                span.visuallyhidden
                  = ref.to_s
                span.todo
                  = ref.to_s

    span.question-context.question-debug
      - if question.delegate_obj.is_a?(QAEFormBuilder::HeaderQuestion)
        - if question.ref || question.sub_ref
            p
              em = "Please note #{(question.ref || question.sub_ref).delete(" ")} is just a heading for the following sub-questions."
      - if question.context
        == question.context
      - for help in question.help
        == help.text

    - question.hint.each_with_index do |help, index|
      details
        - if help.title.present?
          summary
            span.summary
              = help.title.html_safe
        .panel.panel-border-narrow
          == help.text

    ul.errors-container
      - if @form_answer.validator_errors && @form_answer.validator_errors[question.hash_key].present? && @form_answer.validator_errors[question.hash_key].is_a?(String)
        li = @form_answer.validator_errors[question.hash_key]
    .clear

    .question-group
      = render partial: "qae_form/#{question.delegate_obj.class.name.demodulize.underscore}", object: question, as: 'question', locals: {answers: answers, attachments: attachments}
      span.hint = question.form_hint
      .clear

      / Conditional hints
      - if question.can_have_conditional_hints?
        = render "qae_form/conditional_hints/list", question: question

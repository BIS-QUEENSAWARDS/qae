- if question.key == :org_chart
  = render "shared/non_js_dynamic_list_redirect_warning", add_message: "Upload"

.js-upload-wrapper data-max-attachments=question.max_attachments data-form-name=question.form_name data-name=question.key data-description=(question.description ? '1' : nil) data-list-namespace=(question.key == :org_chart ? "organisational_charts" : "form_attachments")
  ul.js-uploaded-list.list-add
    - (question.input_value(json: true) || {}).to_a.sort_by{|o| o.first.to_i}.each do |(idx, el)|

      - if (el['file'].present? && attachments[el['file'].to_i].present?) || el['link'].present?
        li class="#{'js-file-uploaded' if el['file'].present?}"
          div
            - if el['file'].present?
              = render "form/form_attachments/file", el: el, attachments: attachments
              input type='hidden' name=question.input_name(suffix: 'file', index: idx) value=attachments[el['file'].to_i].id *possible_read_only_ops

              - unless admin_in_read_only_mode?
                - if question.key == :org_chart
                  = link_to "Remove", form_form_answer_organisational_chart_confirm_deletion_url(@form_answer.id, el['file'].to_i), class: "govuk-link remove-link if-js-hide"

                  = link_to "Remove", form_form_answer_organisational_chart_url(@form_answer.id, el['file'].to_i),
                                      possible_read_only_ops.merge({class: "govuk-link remove-link if-no-js-hide",
                                                                    remote: true,
                                                                    method: :delete})
                - else
                  = link_to "Remove", form_form_answer_form_attachment_url(@form_answer.id, el['file'].to_i),
                                      possible_read_only_ops.merge({class: "govuk-link remove-link govuk-button govuk-button--warning float-right display-inline mt--5",
                                                                    remote: true,
                                                                    method: :delete})

                  // path not working for non-JS remove button
                  = button_to "Remove me", form_form_answer_form_attachment_url(@form_answer.id, el['file'].to_i),
                      method: :delete,
                      class: "non-js-remove-link", form_class: "non-js-button-to"

                  = form_for @form_answer, url: form_form_answer_form_attachment_url(@form_answer.id, el['file'].to_i), method: :delete, remote: true, html: {class: "non-js-remove-link"} do |f|
                    = f.submit "Remove me", class: "govuk-button govuk-button--warning float-right display-inline mt--5"


            - elsif el['link'].present?
              .govuk-form-group
                label.govuk-label class="govuk-!-margin-bottom-2 display-inline" for=question.input_name(suffix: 'link', index: idx)
                  ' Website address
                = link_to "Remove", form_form_answer_form_attachment_url(@form_answer.id, el['link'].to_i),
                                      possible_read_only_ops.merge({class: "remove-link govuk-button govuk-button--warning remove-website display-inline mt-0",
                                                                    remote: true,
                                                                    method: :delete})
                input.govuk-input.js-trigger-autosave type="text" id=question.input_name(suffix: 'link', index: idx) name=question.input_name(suffix: 'link', index: idx) value=question.input_value(suffix: 'link', index: idx)  *possible_read_only_ops

          - if question.description
            .govuk-form-group
              label.govuk-label class="govuk-!-margin-top-5" for=question.input_name(suffix: 'description', index: idx)
                ' Description
                / (optional)
              textarea.govuk-textarea.js-char-count.js-trigger-autosave rows="2" maxlength="600" data-word-max="100" name=question.input_name(suffix: 'description', index: idx) id=question.input_name(suffix: 'description', index: idx)  *possible_read_only_ops
                = question.input_value(suffix: 'description', index: idx)
          - unless admin_in_read_only_mode? || question.key == :org_chart || :supporting_financials
            a.govuk-button.govuk-button--warning.remove-link class="govuk-!-margin-bottom-3" href="#" *possible_read_only_ops
              | Remove website address

  span.govuk-error-message
  .if-no-js-hide.govuk-button-group
    span.govuk-button.govuk-button--secondary.button-add class=("website-document-btns" if question.links) data-entity="file" *possible_read_only_ops
      span
        | Upload a file
      input.fileinput-button.js-file-upload type="file" name="form[file]" id="q_#{question.key}" *possible_read_only_ops data-question-key=question.key aria-label="Upload"
    - if question.links
      | &nbsp;
      a.govuk-button.govuk-button--secondary.button-add.js-file-upload.website-document-btns data-add-link="1" href="#" aria-label="Add website address" data-entity="website address" *possible_read_only_ops
        | Add website address

  - if question.key == :org_chart && @form_answer.document["org_chart"].blank?
    .if-js-hide
      = link_to "+ Upload", new_form_form_answer_organisational_chart_url(@form_answer.id),
                            class: "govuk-button govuk-button--secondary button-add",
                            "aria-label" => "Upload",
                            "data-entity" => "organisational chart"
  - elsif question.key == :innovation_materials && @form_answer.document["innovation_materials"].count < question.max_attachments
    .if-js-hide.govuk-button-group
      = link_to "Upload a file", new_form_form_answer_form_attachment_url(@form_answer.id),
                            class: "govuk-button govuk-button--secondary button-add",
                            "aria-label" => "Upload a file",
                            "data-entity" => "file"

      = link_to "Add website address", new_form_form_answer_form_links_url(@form_answer.id),
                            class: "govuk-button govuk-button--secondary button-add",
                            "aria-label" => "Upload a website address",
                            "data-entity" => "website address"

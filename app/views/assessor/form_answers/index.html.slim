- if @search.query?
  .row
    = render "layouts/admin_award_year"
  .clear
  br

  h2.ellipsis
    = link_to "â€¹ Back to overview", assessor_form_answers_path, class: "btn btn-link btn-lg pull-left"
    = "Search results for '#{@search.query}'"
- else
  .row
    = render "layouts/admin_award_year"

    .col-md-4.col-sm-5.col-xs-12.pull-right
      .form-group.search-input
        = simple_form_for @search, url: assessor_form_answers_path, method: :get, as: :search do |f|

          = f.input :query, label: false, input_html: { class: "form-control", placeholder: "Search...", type: "search" }
          = submit_tag :submit, class: 'search-submit'

  = render("assessor/form_answers/category_tabs")
  .clear

  br
  = render("assessor/form_answers/bulk_assignment")

= simple_form_for @search, url: assessor_form_answers_path, method: :get, as: :search, html: { class: 'search-form'} do |f|
  = hidden_field_tag :award_type, category_picker.current_award_type

  .row
    .col-xs-12
      .table-overflow-container
        table.table.applications-table
          thead
            tr
              - unless @search.query?
                th
                  span.if-no-js-hide
                    = check_box_tag :check_all
              th.sortable
                = sort_link f, "Company/Nominee", @search, :company_or_nominee_name, disabled: @search.query?
              th.sortable
                = sort_link f, "Reference", @search, :urn, disabled: @search.query?
              - if @search.query?
                th Award Type
              - else
                = render("assessor/form_answers/status_header", f: f)
                th &nbsp;
                th.sortable
                  = sort_link f, "Flag", @search, :flag, disabled: @search.query?
            tbody
              - FormAnswerDecorator.decorate_collection(@form_answers).each do |obj|
                tr
                  - unless @search.query?
                    td = check_box_tag :check, obj.id, false, class: "form-answer-check"
                  td.td-title
                    = link_to [namespace_name, obj], class: "ellipsis"
                      - unless obj.company_or_nominee_name.nil?
                        = link_to obj.company_or_nominee_name, [namespace_name, obj]
                      - else
                        = link_to [namespace_name, obj] do
                          em
                            ' Not found
                  td
                    - if obj.urn.present?
                      = obj.urn
                    - else
                      span.urn-not-generated Not yet generated

                  - if @search.query?
                    td = obj.award_type
                  - else
                    td= obj.state.humanize
                    td= obj.primary_assessor_full_name
                    td= obj.secondary_assessor_full_name
                  td
                    - app_comments = application_comments(obj.comments)
                    - if app_comments.present?
                      = link_to [namespace_name, obj]
                        = app_comments
                  td = application_flags(obj)
  .row
  .col-xs-12.text-right
    = paginate @form_answers
    .clear

- if @search.query?
  .row
    = render "layouts/admin_award_year"
  .clear
  br

  h2.ellipsis
    = link_to "â€¹ Back to overview", assessor_form_answers_path, class: "btn btn-link btn-lg pull-left"
    = "Search results for '#{@search.query}'"
- else
  .row
    = render "layouts/admin_award_year"

    .col-md-4.col-sm-5.col-xs-12.pull-right
      .form-group.search-input
        = simple_form_for @search, url: assessor_form_answers_path, method: :get, as: :search do |f|

          = f.input :query, label: false, input_html: { class: "form-control", placeholder: "Search...", type: "search" }
          = submit_tag :submit, class: 'search-submit'

  .row
    - if show_award_tabs_for_assessor?
      .col-md-9.col-sm-8
        ul.nav.nav-pills
          - visible_categories.each_with_index do |category, index|
            li role="presentation" class="#{'active' if params[:award_type] == category} #{'active' if !params[:award_type].present? and index == 0}"
              = link_to FormAnswer::AWARD_TYPE_FULL_NAMES[category], assessor_form_answers_path(award_type: category)

    - if current_subject.categories_as_lead.include?(current_award_type)
      .col-md-3.pull-right.text-right.if-no-js-hide
        .btn.btn-success.bulk-assign-assessors-link Bulk Assign Assessors
  .clear

  br

- unless @search.query?
- if current_subject.categories_as_lead.include?(current_award_type)
  .well.bulk-assign-assessors-form.if-no-js-hide
    h3 Bulk Assign Assessors
    = form_for [namespace_name, AssessorAssignmentCollection.new] do |f|
      = flash[:error]
      fieldset.question-group
        .row
          .col-md-4.col-sm-5
            .input.select.form-group
              label.select.control-label
                ' Assign Primary Assessor to these applications
                = f.select :primary_assessor_id,
                           [["Not Assigned", "not assigned"]] + Assessor.available_for(current_award_type).map{|a| [a.full_name, a.id]},
                           { include_blank: true },
                           class: "form-control"
            .input.select.form-group
              label.select.control-label
                ' Assign Secondary Assessor to these applications
                = f.select :secondary_assessor_id,
                           [["Not Assigned", "not assigned"]] + Assessor.available_for(current_award_type).map{|a| [a.full_name, a.id]},
                           { include_blank: true },
                           class: "form-control"
          = f.text_field :form_answer_ids, class: "if-js-hide visuallyhidden"

        = link_to "Cancel", "#", class: "btn btn-default if-no-js-hide bulk-assign-assessors-cancel-link"
        = f.submit "Assign", class: "btn btn-primary"

br

= simple_form_for @search, url: assessor_form_answers_path, method: :get, as: :search, html: { class: 'search-form'} do |f|
  = hidden_field_tag :award_type, current_award_type

  .row
    .col-xs-12
      .table-overflow-container
        table.table.applications-table
          thead
            tr
              - unless @search.query?
                th
                  span.if-no-js-hide
                    = check_box_tag :check_all
              th.sortable
                = sort_link f, "Company/Nominee", @search, :company_or_nominee_name, disabled: @search.query?
              th.sortable
                = sort_link f, "Reference", @search, :urn, disabled: @search.query?
              - if @search.query?
                th Award Type
              - else
                th.filter
                  = f.simple_fields_for [:filters, @search.filters] do |h|
                    = h.input :status, collection: FormAnswerStatus::AssessorFilter.options, label: false, input_html: {multiple: true, class: 'if-js-hide'}
                  = f.simple_fields_for [:filters, @search.filters] do |g|
                    = g.input :sub_status, collection: FormAnswerStatus::AssessorFilter.sub_options, label: false, input_html: { multiple: true, class: "if-js-hide" }
                  / TODO do category filter dropdown
                  .dropdown.if-no-js-hide
                    button.btn.btn-default.dropdown-toggle type="button" data-toggle="dropdown" aria-expanded="true"
                      ' Status:
                      span.text-filter
                        ' All
                      span.caret
                    ul.dropdown-menu role="menu"
                      li.checkbox role="presentation"
                        label data-value='select_all'
                          input type="checkbox"
                          span.label-contents
                            em Select all
                        - FormAnswerStatus::AssessorFilter.options.each do |k, option|
                          li.checkbox role="presentation"
                            label data-value=k
                              input type="checkbox"
                              span.label-contents
                                = option[:label]
                        li.divider
                        - FormAnswerStatus::AssessorFilter.sub_options.each do |k, option|
                          li.checkbox role="presentation"
                            label data-value=k
                              input type="checkbox"
                              span.label-contents
                                = option[:label]
                  = f.submit "Filter", class: "if-js-hide"
                  label.if-js-hide Ctrl + left click for multi select

                  th.sortable
                    = sort_link f, "Primary Assessor", @search, :primary_assessor_name, disabled: @search.query?

                  th.sortable
                    = sort_link f, "Secondary Assessor", @search, :secondary_assessor_name, disabled: @search.query?

                th &nbsp;
                th.sortable
                  = sort_link f, "Flag", @search, :flag, disabled: @search.query?
            tbody
              - FormAnswerDecorator.decorate_collection(@form_answers).each do |obj|
                tr
                  - unless @search.query?
                    td = check_box_tag :check, obj.id, false, class: "form-answer-check"
                  td.td-title
                    = link_to [namespace_name, obj], class: "ellipsis"
                      - unless obj.company_or_nominee_name.nil?
                        = link_to obj.company_or_nominee_name, [namespace_name, obj]
                      - else
                        = link_to [namespace_name, obj] do
                          em
                            ' Not found
                  td
                    - if obj.urn.present?
                      = obj.urn
                    - else
                      span.urn-not-generated Not yet generated

                  - if @search.query?
                    td = obj.award_type
                  - else
                    td= obj.state.humanize
                    td= obj.assessors.primary.try(:full_name) || "Not Assigned"
                    td= obj.assessors.secondary.try(:full_name) || "Not Assigned"
                  td
                    - app_comments = application_comments(obj.comments)
                    - if app_comments.present?
                      = link_to [namespace_name, obj]
                        = app_comments
                  td = application_flags(obj)
  .row
  .col-xs-12.text-right
    = paginate @form_answers
    .clear
